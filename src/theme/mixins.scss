// Material 3 Compatible Mixins
// Updated to use CSS custom properties from M3 theme system
@use 'variables' as vars;

// Responsive Mixins
@mixin mobile {
  @media (max-width: vars.$breakpoint-sm - 1px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: vars.$breakpoint-sm) and (max-width: vars.$breakpoint-md - 1px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: vars.$breakpoint-md) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: vars.$breakpoint-lg) {
    @content;
  }
}

// Flexbox Mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
}

// Text Mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Animation Mixins using M3 tokens
@mixin fade-in($duration: var(--transition-normal, 0.3s)) {
  animation: fadeIn $duration ease-in forwards;
}

@mixin slide-up($duration: var(--transition-normal, 0.3s)) {
  animation: slideUp $duration ease-out forwards;
}

@mixin scale-in($duration: var(--transition-normal, 0.3s)) {
  animation: scaleIn $duration ease-out forwards;
}

// Keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(var(--mat-sys-spacing-large, 1rem));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// Utility Mixins
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// M3-specific mixins for common patterns
@mixin surface-elevated {
  background-color: var(--surface-container-color);
  box-shadow: var(--shadow-2);
  border-radius: var(--mat-sys-corner-medium);
}

@mixin surface-card {
  background-color: var(--surface-container-color);
  box-shadow: var(--shadow-1);
  border-radius: var(--mat-sys-corner-large);
  border: 1px solid var(--outline-variant-color);
}

// Focus states using M3 tokens
@mixin focus-ring {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

// Interactive states
@mixin hover-lift {
  transition: all var(--transition-fast, 0.15s) ease-out;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-3);
  }
}